<android.app.ActivityManager: java.util.List getRecentTasks(int,int)>
<android.app.ActivityManager: java.util.List getRunningTasks(int)>
<android.bluetooth.BluetoothHeadset: boolean startVoiceRecognition(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothHeadset: boolean stopVoiceRecognition(android.bluetooth.BluetoothDevice)>
<android.content.ContentProviderClient: int bulkInsert(android.net.Uri,android.content.ContentValues[])>
<android.content.ContentProviderClient: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
<android.content.ContentProviderClient: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
<android.content.ContentProviderClient: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>
<android.content.ContentProviderClient: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentProviderClient: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<android.content.ContentResolver: int bulkInsert(android.net.Uri,android.content.ContentValues[])>
<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>
<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>
<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<android.hardware.Camera: android.hardware.Camera open()>
<android.hardware.Camera: android.hardware.Camera open(int)>
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>
<android.telephony.TelephonyManager: java.lang.String getDeviceSoftwareVersion()>
<android.telephony.TelephonyManager: java.lang.String getLine1Number()>
<android.telephony.TelephonyManager: java.util.List getNeighboringCellInfo()>
<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>
<android.telephony.TelephonyManager: java.lang.String getVoiceMailAlphaTag()>
<android.telephony.TelephonyManager: java.lang.String getVoiceMailNumber()>
<android.telephony.TelephonyManager: void listen(android.telephony.PhoneStateListener,int)>
<android.media.AudioManager: boolean isBluetoothA2dpOn()>
<android.media.AudioManager: boolean isWiredHeadsetOn()>
<android.media.AudioManager: void setBluetoothScoOn(boolean)>
<android.media.AudioManager: void setMicrophoneMute(boolean)>
<android.media.AudioManager: void setMode(int)>
<android.media.AudioManager: void setParameter(java.lang.String,java.lang.String)>
<android.media.AudioManager: void setParameters(java.lang.String)>
<android.media.AudioManager: void setSpeakerphoneOn(boolean)>
<android.media.AudioManager: void startBluetoothSco()>
<android.media.AudioManager: void stopBluetoothSco()>
<android.media.AudioRecord: void <init>(int,int,int,int,int)>
<android.media.MediaPlayer: void setWakeMode(android.content.Context,int)>
<android.media.MediaRecorder: void setAudioSource(int)>
<android.media.MediaRecorder: void setVideoSource(int)>
<android.net.ConnectivityManager: boolean requestRouteToHost(int,int)>
<android.net.ConnectivityManager: void setNetworkPreference(int)>
<android.net.ConnectivityManager: int startUsingNetworkFeature(int,java.lang.String)>
<android.net.ConnectivityManager: int stopUsingNetworkFeature(int,java.lang.String)>
<android.net.wifi.WifiManager$MulticastLock: void acquire()>
<android.net.wifi.WifiManager$MulticastLock: void release()>
<android.net.wifi.WifiManager$WifiLock: void acquire()>
<android.net.wifi.WifiManager$WifiLock: void release()>
<android.net.wifi.WifiManager: int addNetwork(android.net.wifi.WifiConfiguration)>
<android.net.wifi.WifiManager: boolean disableNetwork(int)>
<android.net.wifi.WifiManager: boolean disconnect()>
<android.net.wifi.WifiManager: boolean enableNetwork(int,boolean)>
<android.net.wifi.WifiManager: boolean pingSupplicant()>
<android.net.wifi.WifiManager: boolean reassociate()>
<android.net.wifi.WifiManager: boolean reconnect()>
<android.net.wifi.WifiManager: boolean removeNetwork(int)>
<android.net.wifi.WifiManager: boolean saveConfiguration()>
<android.net.wifi.WifiManager: boolean setWifiEnabled(boolean)>
<android.net.wifi.WifiManager: boolean startScan()>
<android.os.PowerManager$WakeLock: void acquire()>
<android.os.PowerManager$WakeLock: void acquire(long)>
<android.os.PowerManager$WakeLock: void release(int)>
<android.speech.SpeechRecognizer: void cancel()>
<android.speech.SpeechRecognizer: void startListening(android.content.Intent)>
<android.speech.SpeechRecognizer: void stopListening()>
<java.net.Socket: void <init>(java.lang.String,int,java.net.InetAddress,int)>
<java.net.Socket: void <init>(java.lang.String,int,boolean)>
<java.net.Socket: void <init>(java.net.InetAddress,int,java.net.InetAddress,int)>
<java.net.Socket: void <init>(java.net.InetAddress,int,boolean)>
<java.net.URL: java.net.URLConnection openConnection()>
<android.location.LocationManager: void addProximityAlert(double,double,float,long,android.app.PendingIntent)>
<android.location.LocationManager: void addTestProvider(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)>
<android.location.LocationManager: void clearTestProviderEnabled(java.lang.String)>
<android.location.LocationManager: void clearTestProviderLocation(java.lang.String)>
<android.location.LocationManager: void clearTestProviderStatus(java.lang.String)>
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>
<android.location.LocationManager: android.location.LocationProvider getProvider(java.lang.String)>
<android.location.LocationManager: List<String> getProviders(android.location.Criteria,boolean)>
<android.location.LocationManager: java.util.List getProviders(boolean)>
<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>
<android.location.LocationManager: void removeTestProvider(java.lang.String)>
<android.location.LocationManager: void requestLocationUpdates(long,float,android.location.Criteria,android.app.PendingIntent)>
<android.location.LocationManager: void requestLocationUpdates(long,float,android.location.Criteria,android.location.LocationListener,android.os.Looper)>
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.app.PendingIntent)>
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)>
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>
<android.location.LocationManager: void requestSingleUpdate(android.location.Criteria,android.app.PendingIntent)>
<android.location.LocationManager: void requestSingleUpdate(android.location.Criteria,android.location.LocationListener,android.os.Looper)>
<android.location.LocationManager: void requestSingleUpdate(java.lang.String,android.app.PendingIntent)>
<android.location.LocationManager: void requestSingleUpdate(java.lang.String,android.location.LocationListener,android.os.Looper)>
<android.location.LocationManager: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>
<android.location.LocationManager: void setTestProviderEnabled(java.lang.String,boolean)>
<android.location.LocationManager: void setTestProviderLocation(java.lang.String,android.location.Location)>
<android.location.LocationManager: void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)>
<android.telephony.TelephonyManager: android.telephony.CellLocation getCellLocation()>
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>
<android.net.NetworkInfo: java.lang.String getExtraInfo()>
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>
<android.net.NetworkInfo: java.lang.String getTypeName()>
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>
<android.telephony.gsm.GsmCellLocation: int getLac()>
<android.telephony.gsm.GsmCellLocation: int getCid()>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>
<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>
<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>
<android.telephony.TelephonyManager: java.lang.String getSimOperator()>
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<android.net.NetworkInfo: int getType()>
<android.net.NetworkInfo: java.lang.String getSubtypeName()>
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>
<android.telephony.cdma.CdmaCellLocation: int getBaseStationLatitude()>
<android.telephony.cdma.CdmaCellLocation: int getBaseStationLongitude()>
<android.telephony.cdma.CdmaCellLocation: int getNetworkId()>
<android.telephony.cdma.CdmaCellLocation: int getBaseStationId()>
<android.net.wifi.WifiInfo: java.lang.String getBSSID()>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.telephony.TelephonyManager: int getNetworkType()>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>
<android.telephony.TelephonyManager: java.lang.String getNetworkCountryIso()>
<android.media.AudioManager: int getRingerMode()>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>
<org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory()>
<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>
<android.telephony.TelephonyManager: int getPhoneType()>
<android.net.wifi.WifiInfo: java.lang.String getSSID()>
<android.net.wifi.WifiInfo: int getRssi()>
<android.telephony.TelephonyManager: int getSimState()>
<android.hardware.display.DisplayManager: android.view.Display[] getDisplays(java.lang.String)>
<java.net.InetSocketAddress: java.net.InetAddress getAddress()>
<java.net.InetSocketAddress: int getPort()>
<android.hardware.Camera: android.hardware.Camera$Parameters getParameters()>
<android.hardware.Camera$Parameters: int getPreviewFormat()>
<android.hardware.Camera$Parameters: java.lang.String get(java.lang.String)>
<javax.net.SocketFactory: java.net.Socket createSocket()>
<android.hardware.display.DisplayManager: android.view.Display[] getDisplays()>
<android.hardware.display.DisplayManager: android.view.Display getDisplay(int)>
<android.media.AudioManager: int getMode()>
<android.media.AudioManager: boolean isMusicActive()>
<android.telephony.cdma.CdmaCellLocation: int getSystemId()>
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>
<android.net.wifi.WifiInfo: int getIpAddress()>
<android.telephony.gsm.SmsManager: android.telephony.gsm.SmsManager getDefault()>
<android.net.NetworkInfo: java.lang.String toString()>
<android.database.sqlite.SQLiteDatabase: java.lang.String getPath()>
<android.telephony.TelephonyManager: java.lang.String getSimOperatorName()>
<android.net.NetworkInfo: int getSubtype()>
<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int)>
<android.bluetooth.BluetoothAdapter: java.lang.String getName()>
<android.bluetooth.BluetoothAdapter: java.lang.String getAddress()>
<android.location.Location: double getLatitude()>
<android.location.Location: double getLongitude()>
<android.media.AudioRecord: int read(short[],int,int)>
<android.media.AudioRecord: int read(byte[],int,int)>
<android.accounts.AccountManager: android.accounts.Account[] getAccounts()>
<android.provider.Browser: android.database.Cursor getAllBookmarks()>
<android.provider.Browser: android.database.Cursor getAllVisitedUrls()>